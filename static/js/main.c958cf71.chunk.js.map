{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","api/api.js","index.js"],"names":["TodoList","state","inputValue","optionValue","todos","setTodos","todosList","setState","listFilter","event","target","value","props","filter","todo","completed","inputHandler","selectHandler","prevProps","prevState","length","this","filteredList","title","includes","className","type","onChange","onClick","map","key","id","classNames","checked","readOnly","chooseUser","userId","React","Component","CurrentUser","user","clear","setUser","data","getUser","fetch","then","response","json","a","name","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c958cf71.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    inputValue: '',\n    optionValue: 'all',\n    todos: [],\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.todos.length !== this.props.todos.length) {\n      this.setTodos([...this.props.todos]);\n      // this.setState({ todos: [...this.props.todos] });\n    }\n\n    if (prevState.inputValue !== this.state.inputValue) {\n      const { todos, inputValue } = this.state;\n\n      if (inputValue !== '') {\n        const filteredList = todos\n          .filter((todo) => {\n            if (todo.title === null) {\n              return false;\n            }\n\n            return todo.title.includes(inputValue);\n          });\n\n        this.setTodos(filteredList);\n        // this.setState({ todos: filteredList });\n      }\n    }\n  }\n\n  setTodos = (todosList) => {\n    this.setState({ todos: todosList });\n  }\n\n  listFilter = (event) => {\n    if (this.state.optionValue !== event.target.value) {\n      switch (event.target.value) {\n        case 'all':\n          this.setState({\n            todos: [...this.props.todos],\n            optionValue: 'all',\n          });\n          break;\n        case 'active':\n          this.setState({\n            todos: this.props.todos.filter(todo => !todo.completed),\n            optionValue: 'active',\n          });\n          break;\n        case 'completed':\n          this.setState({\n            todos: this.props.todos.filter(todo => todo.completed),\n            optionValue: 'completed',\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  inputHandler = (event) => {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  selectHandler = (event) => {\n    this.setState({ optionValue: event.target.value });\n  }\n\n  render() {\n    const { todos, inputValue } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={this.inputHandler}\n          />\n          <select\n            onClick={this.listFilter}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                key={todo.id}\n                className={\n                  classNames(\n                    'TodoList__item',\n                    { 'TodoList__item--unchecked': !todo.completed },\n                    { 'TodoList__item--checked': todo.completed },\n                  )\n                }\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                  type=\"button\"\n                  onClick={() => this.props.chooseUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  chooseUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  async componentDidMount() {\n    const user = await this.getUser();\n\n    this.setUser(user);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      const user = await this.getUser();\n\n      this.setUser(user);\n    }\n  }\n\n  clear = () => {\n    this.setState({ user: {} });\n  }\n\n  setUser = (user) => {\n    this.setState({ user: { ...user.data } });\n  }\n\n  // eslint-disable-next-line\n  getUser = () => fetch(`https://mate-api.herokuapp.com/users/${this.props.userId}`)\n    .then(response => response.json());\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          onClick={this.clear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodosList } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const response = await getTodosList();\n\n    this.setState({ todos: response.data });\n  }\n\n  chooseUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            chooseUser={this.chooseUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const getTodosList = () => fetch('https://mate-api.herokuapp.com/todos')\n  .then(response => response.json());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}